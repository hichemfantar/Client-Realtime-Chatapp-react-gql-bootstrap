[{"/mnt/d/github projects/chatapp/client/src/reportWebVitals.js":"1","/mnt/d/github projects/chatapp/client/src/context/auth.js":"2","/mnt/d/github projects/chatapp/client/src/pages/Login.jsx":"3","/mnt/d/github projects/chatapp/client/src/pages/home/Users.jsx":"4","/mnt/d/github projects/chatapp WSL/client/src/reportWebVitals.js":"5","/mnt/d/github projects/chatapp WSL/client/src/pages/Login.jsx":"6","/mnt/d/github projects/chatapp WSL/client/src/pages/home/Messages.jsx":"7","/mnt/d/github projects/chatapp WSL/client/src/index.js":"8","/mnt/d/github projects/chatapp WSL/client/src/pages/Register.jsx":"9","/mnt/d/github projects/chatapp WSL/client/src/App.jsx":"10","/mnt/d/github projects/chatapp WSL/client/src/pages/home/Users.jsx":"11","/mnt/d/github projects/chatapp WSL/client/src/pages/home/Home.jsx":"12","/mnt/d/github projects/chatapp WSL/client/src/ApolloProvider.js":"13","/mnt/d/github projects/chatapp WSL/client/src/pages/home/Message.jsx":"14","/mnt/d/github projects/chatapp WSL/client/src/utils/DynamicRoute.js":"15","/mnt/d/github projects/chatapp WSL/client/src/context/auth.jsx":"16","/mnt/d/github projects/chatapp WSL/client/src/context/message.jsx":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":1467,"mtime":1607641476601,"results":"20","hashOfConfig":"19"},{"size":3048,"mtime":1607617306408,"results":"21","hashOfConfig":"19"},{"size":2130,"mtime":1608251089006,"results":"22","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":3048,"mtime":1607617306408,"results":"25","hashOfConfig":"24"},{"size":3759,"mtime":1609872553319,"results":"26","hashOfConfig":"24"},{"size":504,"mtime":1606500176762,"results":"27","hashOfConfig":"24"},{"size":4692,"mtime":1606600653958,"results":"28","hashOfConfig":"24"},{"size":1090,"mtime":1608415833599,"results":"29","hashOfConfig":"24"},{"size":2299,"mtime":1609872758112,"results":"30","hashOfConfig":"24"},{"size":1218,"mtime":1609427421661,"results":"31","hashOfConfig":"24"},{"size":851,"mtime":1607643342024,"results":"32","hashOfConfig":"24"},{"size":1096,"mtime":1609545052019,"results":"33","hashOfConfig":"24"},{"size":461,"mtime":1607641359747,"results":"34","hashOfConfig":"24"},{"size":1473,"mtime":1609527510395,"results":"35","hashOfConfig":"24"},{"size":1905,"mtime":1609774678485,"results":"36","hashOfConfig":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"rugmw8",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"vi7zy1",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/d/github projects/chatapp/client/src/reportWebVitals.js",[],["81","82"],"/mnt/d/github projects/chatapp/client/src/context/auth.js",[],"/mnt/d/github projects/chatapp/client/src/pages/Login.jsx",["83","84","85"],"/mnt/d/github projects/chatapp/client/src/pages/home/Users.jsx",["86"],"/mnt/d/github projects/chatapp WSL/client/src/reportWebVitals.js",[],["87","88"],"/mnt/d/github projects/chatapp WSL/client/src/pages/Login.jsx",["89","90","91"],"import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { gql, useLazyQuery, useQuery } from \"@apollo/client\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuthDispatch } from \"../context/auth\";\r\n\r\nconst LOGIN_USER = gql`\r\n  query login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      username\r\n      email\r\n      createdAt\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Login(props) {\r\n  const [variables, setVariables] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const dispatch = useAuthDispatch();\r\n\r\n  const [loginUser, { loading, data, err }] = useLazyQuery(LOGIN_USER, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n      // console.log(err.graphQLErrors[0].extensions.errors);\r\n    },\r\n    onCompleted(data) {\r\n      dispatch({ type: \"LOGIN\", payload: data.login });\r\n      props.history.push(\"/\");\r\n    },\r\n  });\r\n\r\n  const submitLoginForm = (e) => {\r\n    e.preventDefault();\r\n    // console.log(variables);\r\n    loginUser({ variables });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"pt-5\">\r\n      <Row className=\"bg-white py-5 justify-content-center\">\r\n        <Col sm={8} ms={6} lg={4}>\r\n          <h1 className=\"text-center\">Login</h1>\r\n          <Form onSubmit={submitLoginForm}>\r\n            <Form.Group controlId=\"formUsername\">\r\n              <Form.Label className={errors.username && \"text-danger\"}>\r\n                {errors.username ?? \"Username\"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Username\"\r\n                className={errors.username && \"is-invalid\"}\r\n                value={variables.username}\r\n                onChange={(e) =>\r\n                  setVariables({ ...variables, username: e.target.value })\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formPassword\">\r\n              <Form.Label className={errors.password && \"text-danger\"}>\r\n                {errors.password ?? \"Password\"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                className={errors.password && \"is-invalid\"}\r\n                value={variables.password}\r\n                onChange={(e) =>\r\n                  setVariables({ ...variables, password: e.target.value })\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <div className=\"text-center\">\r\n              <Button variant=\"success\" type=\"submit\" disabled={loading}>\r\n                {loading ? \"loading...\" : \"Login\"}\r\n              </Button>\r\n              <br />\r\n              <small>\r\n                Don't have an account? <Link to=\"/register\">Register</Link>\r\n              </small>\r\n            </div>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n",["92","93"],"/mnt/d/github projects/chatapp WSL/client/src/pages/home/Messages.jsx",["94","95","96","97","98","99"],"/mnt/d/github projects/chatapp WSL/client/src/index.js",[],"/mnt/d/github projects/chatapp WSL/client/src/pages/Register.jsx",["100","101"],"import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $username: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      username: $username\r\n      email: $email\r\n      password: $password\r\n      confirmPassword: $confirmPassword\r\n    ) {\r\n      username\r\n      email\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Register(props) {\r\n  const [variables, setVariables] = useState({\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [registerUser, { loading, data, err }] = useMutation(REGISTER_USER, {\r\n    update(_, __) {\r\n      props.history.push(\"/login\");\r\n      // console.log(res);\r\n    },\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n      // console.log(err.graphQLErrors[0].extensions.errors);\r\n    },\r\n  });\r\n\r\n  const submitRegisterForm = (e) => {\r\n    e.preventDefault();\r\n    // console.log(variables);\r\n    registerUser({ variables });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"pt-5\">\r\n      <Row className=\"bg-white py-5 justify-content-center\">\r\n        <Col sm={8} ms={6} lg={4}>\r\n          <h1 className=\"text-center\">Register</h1>\r\n          <Form onSubmit={submitRegisterForm}>\r\n            <Form.Group controlId=\"formEmail\">\r\n              <Form.Label className={errors.email && \"text-danger\"}>\r\n                {errors.email ?? \"Email address\"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                className={errors.email && \"is-invalid\"}\r\n                value={variables.email}\r\n                onChange={(e) =>\r\n                  setVariables({ ...variables, email: e.target.value })\r\n                }\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formUsername\">\r\n              <Form.Label className={errors.username && \"text-danger\"}>\r\n                {errors.username ?? \"Username\"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Username\"\r\n                className={errors.username && \"is-invalid\"}\r\n                value={variables.username}\r\n                onChange={(e) =>\r\n                  setVariables({ ...variables, username: e.target.value })\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formPassword\">\r\n              <Form.Label className={errors.password && \"text-danger\"}>\r\n                {errors.password ?? \"Password\"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                className={errors.password && \"is-invalid\"}\r\n                value={variables.password}\r\n                onChange={(e) =>\r\n                  setVariables({ ...variables, password: e.target.value })\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formConfirmPassword\">\r\n              <Form.Label className={errors.confirmPassword && \"text-danger\"}>\r\n                {errors.confirmPassword ?? \"Confirm Password\"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirm password\"\r\n                className={errors.confirmPassword && \"is-invalid\"}\r\n                value={variables.confirmPassword}\r\n                onChange={(e) =>\r\n                  setVariables({\r\n                    ...variables,\r\n                    confirmPassword: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicCheckbox\">\r\n              <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n            </Form.Group>\r\n            <div className=\"text-center\">\r\n              <Button variant=\"success\" type=\"submit\" disabled={loading}>\r\n                {loading ? \"loading...\" : \"Register\"}\r\n              </Button>\r\n              <br />\r\n              <small>\r\n                Already have an account? <Link to=\"/login\">Login</Link>\r\n              </small>\r\n            </div>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n",["102","103"],"/mnt/d/github projects/chatapp WSL/client/src/App.jsx",["104","105"],"/mnt/d/github projects/chatapp WSL/client/src/pages/home/Users.jsx",["106"],"/mnt/d/github projects/chatapp WSL/client/src/pages/home/Home.jsx",["107","108","109","110","111","112","113"],"import React, { Fragment } from \"react\";\r\nimport { Image, Row, Col, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuthDispatch } from \"../../context/auth\";\r\nimport { useQuery, gql, useLazyQuery } from \"@apollo/client\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Users from \"./Users\";\r\nimport Messages from \"./Messages\";\r\n\r\nfunction Home({ history }) {\r\n  const dispatch = useAuthDispatch();\r\n\r\n  const logout = () => {\r\n    dispatch({ type: \"LOGOUT\" });\r\n    window.location.href = \"/login\";\r\n    // history.push(\"/login\");\r\n  };\r\n\r\n  // if (messagesData) {\r\n  //   console.log(messagesData.getMessages);\r\n  // }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row className=\"bg-white justify-content-around mb-1\">\r\n        <Link to=\"/login\">\r\n          <Button variant=\"link\">Login</Button>\r\n        </Link>\r\n        <Link to=\"/register\">\r\n          <Button variant=\"link\">Register</Button>\r\n        </Link>\r\n        <Button variant=\"link\" onClick={logout}>\r\n          Logout\r\n        </Button>\r\n      </Row>\r\n      <Row className=\"bg-white\">\r\n        <Users />\r\n        <Messages />\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n",["114","115"],"/mnt/d/github projects/chatapp WSL/client/src/ApolloProvider.js",[],"/mnt/d/github projects/chatapp WSL/client/src/pages/home/Message.jsx",["116"],"import classNames from \"classnames\";\nimport { useAuthState } from \"context/auth\";\nimport moment from \"moment\";\nimport React, { useRef } from \"react\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\nfunction Message({ message }) {\n  const { user } = useAuthState();\n  const sent = message.from === user.username;\n  const received = !sent;\n  return (\n    <OverlayTrigger\n      placement={sent ? \"right\" : \"left\"}\n      overlay={\n        <Tooltip>\n          {moment(message.createdAt).format(\"MMMM DD, YYYY @ h:mm a\")}\n        </Tooltip>\n      }\n      transition={false}\n    >\n      <div\n        className={classNames(\"d-flex my-3\", {\n          \"ml-auto\": sent,\n          \"mr-auto\": received,\n        })}\n      >\n        <div\n          className={classNames(\"py-2 px-3 rounded-pill\", {\n            \"bg-primary\": sent,\n            \"bg-secondary\": received,\n          })}\n        >\n          <p className={classNames({ \"text-white\": sent })} key={message.uuid}>\n            {message.content}\n          </p>\n        </div>\n      </div>\n    </OverlayTrigger>\n  );\n}\n\nexport default Message;\n","/mnt/d/github projects/chatapp WSL/client/src/utils/DynamicRoute.js",[],["117","118"],"/mnt/d/github projects/chatapp WSL/client/src/context/auth.jsx",[],"/mnt/d/github projects/chatapp WSL/client/src/context/message.jsx",["119"],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":3,"column":29,"nodeType":"126","messageId":"127","endLine":3,"endColumn":37},{"ruleId":"124","severity":1,"message":"128","line":28,"column":32,"nodeType":"126","messageId":"127","endLine":28,"endColumn":36},{"ruleId":"124","severity":1,"message":"129","line":28,"column":38,"nodeType":"126","messageId":"127","endLine":28,"endColumn":41},{"ruleId":"124","severity":1,"message":"130","line":2,"column":25,"nodeType":"126","messageId":"127","endLine":2,"endColumn":37},{"ruleId":"120","replacedBy":"131"},{"ruleId":"122","replacedBy":"132"},{"ruleId":"124","severity":1,"message":"125","line":3,"column":29,"nodeType":"126","messageId":"127","endLine":3,"endColumn":37},{"ruleId":"124","severity":1,"message":"128","line":28,"column":32,"nodeType":"126","messageId":"127","endLine":28,"endColumn":36},{"ruleId":"124","severity":1,"message":"129","line":28,"column":38,"nodeType":"126","messageId":"127","endLine":28,"endColumn":41},{"ruleId":"120","replacedBy":"133"},{"ruleId":"122","replacedBy":"134"},{"ruleId":"124","severity":1,"message":"125","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":18},{"ruleId":"124","severity":1,"message":"135","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":15},{"ruleId":"124","severity":1,"message":"136","line":3,"column":17,"nodeType":"126","messageId":"127","endLine":3,"endColumn":20},{"ruleId":"124","severity":1,"message":"137","line":3,"column":27,"nodeType":"126","messageId":"127","endLine":3,"endColumn":33},{"ruleId":"138","severity":1,"message":"139","line":65,"column":6,"nodeType":"140","endLine":65,"endColumn":20,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"142","line":77,"column":6,"nodeType":"140","endLine":77,"endColumn":20,"suggestions":"143"},{"ruleId":"124","severity":1,"message":"128","line":36,"column":35,"nodeType":"126","messageId":"127","endLine":36,"endColumn":39},{"ruleId":"124","severity":1,"message":"129","line":36,"column":41,"nodeType":"126","messageId":"127","endLine":36,"endColumn":44},{"ruleId":"120","replacedBy":"144"},{"ruleId":"122","replacedBy":"145"},{"ruleId":"124","severity":1,"message":"146","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":12},{"ruleId":"124","severity":1,"message":"147","line":6,"column":25,"nodeType":"126","messageId":"127","endLine":6,"endColumn":30},{"ruleId":"124","severity":1,"message":"130","line":2,"column":25,"nodeType":"126","messageId":"127","endLine":2,"endColumn":37},{"ruleId":"124","severity":1,"message":"135","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":15},{"ruleId":"124","severity":1,"message":"148","line":2,"column":22,"nodeType":"126","messageId":"127","endLine":2,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":5,"column":10,"nodeType":"126","messageId":"127","endLine":5,"endColumn":18},{"ruleId":"124","severity":1,"message":"149","line":5,"column":20,"nodeType":"126","messageId":"127","endLine":5,"endColumn":23},{"ruleId":"124","severity":1,"message":"130","line":5,"column":25,"nodeType":"126","messageId":"127","endLine":5,"endColumn":37},{"ruleId":"124","severity":1,"message":"150","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":18},{"ruleId":"124","severity":1,"message":"151","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":19},{"ruleId":"120","replacedBy":"152"},{"ruleId":"122","replacedBy":"153"},{"ruleId":"124","severity":1,"message":"154","line":4,"column":17,"nodeType":"126","messageId":"127","endLine":4,"endColumn":23},{"ruleId":"120","replacedBy":"155"},{"ruleId":"122","replacedBy":"156"},{"ruleId":"124","severity":1,"message":"157","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":17},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'err' is assigned a value but never used.","'useLazyQuery' is defined but never used.",["158"],["159"],["158"],["159"],"'Image' is defined but never used.","'Row' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.","ArrayExpression",["160"],"React Hook useEffect has missing dependencies: 'dispatch' and 'selectedUser.username'. Either include them or remove the dependency array.",["161"],["158"],["159"],"'logo' is defined but never used.","'Route' is defined but never used.","'Col' is defined but never used.","'gql' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.",["158"],["159"],"'useRef' is defined but never used.",["158"],["159"],"'jwtDecode' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [getMessages, selectedUser]",{"range":"166","text":"167"},"Update the dependencies array to be: [dispatch, messagesData, selectedUser.username]",{"range":"168","text":"169"},[1680,1694],"[getMessages, selectedUser]",[1946,1960],"[dispatch, messagesData, selectedUser.username]"]