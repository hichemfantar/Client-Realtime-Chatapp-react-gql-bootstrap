[{"D:\\github projects\\chatapp\\client\\src\\reportWebVitals.js":"1","D:\\github projects\\chatapp\\client\\src\\context\\auth.js":"2","D:\\github projects\\chatapp\\client\\src\\utils\\DynamicRoute.js":"3","D:\\github projects\\chatapp\\client\\src\\App.jsx":"4","D:\\github projects\\chatapp\\client\\src\\ApolloProvider.js":"5","D:\\github projects\\chatapp\\client\\src\\pages\\Login.jsx":"6","D:\\github projects\\chatapp\\client\\src\\index.js":"7","D:\\github projects\\chatapp\\client\\src\\pages\\home\\Users.jsx":"8","D:\\github projects\\chatapp\\client\\src\\pages\\home\\Home.jsx":"9","D:\\github projects\\chatapp\\client\\src\\context\\message.js":"10","D:\\github projects\\chatapp\\client\\src\\pages\\Register.jsx":"11","D:\\github projects\\chatapp\\client\\src\\pages\\home\\Messages.jsx":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":1467,"mtime":1607641476601,"results":"15","hashOfConfig":"14"},{"size":461,"mtime":1607641359747,"results":"16","hashOfConfig":"14"},{"size":1087,"mtime":1608049052323,"results":"17","hashOfConfig":"14"},{"size":851,"mtime":1607643342024,"results":"18","hashOfConfig":"14"},{"size":3048,"mtime":1607617306408,"results":"19","hashOfConfig":"14"},{"size":504,"mtime":1606500176762,"results":"20","hashOfConfig":"14"},{"size":2130,"mtime":1608251089006,"results":"21","hashOfConfig":"14"},{"size":1177,"mtime":1608249693757,"results":"22","hashOfConfig":"14"},{"size":1533,"mtime":1608256082022,"results":"23","hashOfConfig":"14"},{"size":4692,"mtime":1606600653958,"results":"24","hashOfConfig":"14"},{"size":1822,"mtime":1608256768412,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"17sfvtu",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\github projects\\chatapp\\client\\src\\reportWebVitals.js",[],["57","58"],"D:\\github projects\\chatapp\\client\\src\\context\\auth.js",[],["59","60"],"D:\\github projects\\chatapp\\client\\src\\utils\\DynamicRoute.js",[],["61","62"],"D:\\github projects\\chatapp\\client\\src\\App.jsx",["63","64"],"import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport ApolloProvider from \"./ApolloProvider\";\nimport \"./App.scss\";\nimport logo from \"./logo.svg\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Register from \"./pages/Register\";\nimport Home from \"./pages/home/Home\";\nimport Login from \"./pages/Login\";\nimport { AuthProvider } from \"./context/auth\";\nimport { MessageProvider } from \"./context/message\";\nimport DynamicRoute from \"./utils/DynamicRoute\";\nfunction App() {\n  return (\n    <ApolloProvider>\n      <AuthProvider>\n        <MessageProvider>\n          <BrowserRouter>\n            <Container className=\"pt-5\">\n              <Switch>\n                <DynamicRoute exact path=\"/\" component={Home} authenticated />\n                <DynamicRoute path=\"/register\" component={Register} guest />\n                <DynamicRoute path=\"/login\" component={Login} guest />\n              </Switch>\n            </Container>\n          </BrowserRouter>\n        </MessageProvider>\n      </AuthProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","D:\\github projects\\chatapp\\client\\src\\ApolloProvider.js",[],["65","66"],"D:\\github projects\\chatapp\\client\\src\\pages\\Login.jsx",["67","68","69"],"import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { gql, useLazyQuery, useQuery } from \"@apollo/client\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuthDispatch } from \"../context/auth\";\r\n\r\nconst LOGIN_USER = gql`\r\n  query login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      username\r\n      email\r\n      createdAt\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Login(props) {\r\n  const [variables, setVariables] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const dispatch = useAuthDispatch();\r\n\r\n  const [loginUser, { loading, data, err }] = useLazyQuery(LOGIN_USER, {\r\n    onError(err) {\r\n      setErrors(err.graphQLErrors[0].extensions.errors);\r\n      // console.log(err.graphQLErrors[0].extensions.errors);\r\n    },\r\n    onCompleted(data) {\r\n      dispatch({ type: \"LOGIN\", payload: data.login });\r\n      props.history.push(\"/\");\r\n    },\r\n  });\r\n\r\n  const submitLoginForm = (e) => {\r\n    e.preventDefault();\r\n    // console.log(variables);\r\n    loginUser({ variables });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"pt-5\">\r\n      <Row className=\"bg-white py-5 justify-content-center\">\r\n        <Col sm={8} ms={6} lg={4}>\r\n          <h1 className=\"text-center\">Login</h1>\r\n          <Form onSubmit={submitLoginForm}>\r\n            <Form.Group controlId=\"formUsername\">\r\n              <Form.Label className={errors.username && \"text-danger\"}>\r\n                {errors.username ?? \"Username\"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter Username\"\r\n                className={errors.username && \"is-invalid\"}\r\n                value={variables.username}\r\n                onChange={(e) =>\r\n                  setVariables({ ...variables, username: e.target.value })\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formPassword\">\r\n              <Form.Label className={errors.password && \"text-danger\"}>\r\n                {errors.password ?? \"Password\"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                className={errors.password && \"is-invalid\"}\r\n                value={variables.password}\r\n                onChange={(e) =>\r\n                  setVariables({ ...variables, password: e.target.value })\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <div className=\"text-center\">\r\n              <Button variant=\"success\" type=\"submit\" disabled={loading}>\r\n                {loading ? \"loading...\" : \"Login\"}\r\n              </Button>\r\n              <br />\r\n              <small>\r\n                Don't have an account? <Link to=\"/register\">Register</Link>\r\n              </small>\r\n            </div>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\github projects\\chatapp\\client\\src\\index.js",[],"D:\\github projects\\chatapp\\client\\src\\pages\\home\\Users.jsx",["70"],"D:\\github projects\\chatapp\\client\\src\\pages\\home\\Home.jsx",["71","72","73","74","75","76","77"],"D:\\github projects\\chatapp\\client\\src\\context\\message.js",["78"],"import { createContext, useReducer, useContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\nconst MessageStateContext = createContext();\r\nconst MessageDispatchContext = createContext();\r\n\r\nconst messageReducer = (state, action) => {\r\n  let usersCopy;\r\n  switch (action.type) {\r\n    case \"SET_USERS\":\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n\r\n    case \"SET_USER_MESSAGES\":\r\n      const { username, messages } = action.payload;\r\n      usersCopy = [...state.users];\r\n      const userIndex = usersCopy.findIndex((u) => u.username === username);\r\n      usersCopy[userIndex] = { ...usersCopy[userIndex], messages };\r\n      return { ...state, users: usersCopy };\r\n\r\n    case \"SET_SELECTED_USER\":\r\n      usersCopy = state.users.map((user) => ({\r\n        ...user,\r\n        selected: user.username === action.payload,\r\n      }));\r\n      return {\r\n        ...state,\r\n        users: usersCopy,\r\n      };\r\n    default:\r\n      throw new Error(`Unknown action type: ${action.type}`);\r\n  }\r\n};\r\n\r\nexport const MessageProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(messageReducer, { users: null });\r\n  return (\r\n    <MessageDispatchContext.Provider value={dispatch}>\r\n      <MessageStateContext.Provider value={state}>\r\n        {children}\r\n      </MessageStateContext.Provider>\r\n    </MessageDispatchContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useMessageState = () => useContext(MessageStateContext);\r\nexport const useMessageDispatch = () => useContext(MessageDispatchContext);\r\n","D:\\github projects\\chatapp\\client\\src\\pages\\Register.jsx",["79","80"],"D:\\github projects\\chatapp\\client\\src\\pages\\home\\Messages.jsx",["81","82","83","84","85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"87","replacedBy":"91"},{"ruleId":"89","replacedBy":"92"},{"ruleId":"87","replacedBy":"93"},{"ruleId":"89","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":5,"column":8,"nodeType":"97","messageId":"98","endLine":5,"endColumn":12},{"ruleId":"95","severity":1,"message":"99","line":6,"column":25,"nodeType":"97","messageId":"98","endLine":6,"endColumn":30},{"ruleId":"87","replacedBy":"100"},{"ruleId":"89","replacedBy":"101"},{"ruleId":"95","severity":1,"message":"102","line":3,"column":29,"nodeType":"97","messageId":"98","endLine":3,"endColumn":37},{"ruleId":"95","severity":1,"message":"103","line":28,"column":32,"nodeType":"97","messageId":"98","endLine":28,"endColumn":36},{"ruleId":"95","severity":1,"message":"104","line":28,"column":38,"nodeType":"97","messageId":"98","endLine":28,"endColumn":41},{"ruleId":"95","severity":1,"message":"105","line":2,"column":25,"nodeType":"97","messageId":"98","endLine":2,"endColumn":37},{"ruleId":"95","severity":1,"message":"106","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":15},{"ruleId":"95","severity":1,"message":"107","line":2,"column":22,"nodeType":"97","messageId":"98","endLine":2,"endColumn":25},{"ruleId":"95","severity":1,"message":"102","line":5,"column":10,"nodeType":"97","messageId":"98","endLine":5,"endColumn":18},{"ruleId":"95","severity":1,"message":"108","line":5,"column":20,"nodeType":"97","messageId":"98","endLine":5,"endColumn":23},{"ruleId":"95","severity":1,"message":"105","line":5,"column":25,"nodeType":"97","messageId":"98","endLine":5,"endColumn":37},{"ruleId":"95","severity":1,"message":"109","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":18},{"ruleId":"95","severity":1,"message":"110","line":7,"column":10,"nodeType":"97","messageId":"98","endLine":7,"endColumn":19},{"ruleId":"95","severity":1,"message":"111","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":17},{"ruleId":"95","severity":1,"message":"103","line":36,"column":35,"nodeType":"97","messageId":"98","endLine":36,"endColumn":39},{"ruleId":"95","severity":1,"message":"104","line":36,"column":41,"nodeType":"97","messageId":"98","endLine":36,"endColumn":44},{"ruleId":"95","severity":1,"message":"102","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":18},{"ruleId":"95","severity":1,"message":"106","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":15},{"ruleId":"95","severity":1,"message":"112","line":3,"column":17,"nodeType":"97","messageId":"98","endLine":3,"endColumn":20},{"ruleId":"95","severity":1,"message":"113","line":3,"column":27,"nodeType":"97","messageId":"98","endLine":3,"endColumn":33},{"ruleId":"114","severity":1,"message":"115","line":37,"column":6,"nodeType":"116","endLine":37,"endColumn":20,"suggestions":"117"},{"ruleId":"114","severity":1,"message":"118","line":49,"column":6,"nodeType":"116","endLine":49,"endColumn":20,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],["120"],["121"],["120"],["121"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.",["120"],["121"],"'useQuery' is defined but never used.","'data' is assigned a value but never used.","'err' is assigned a value but never used.","'useLazyQuery' is defined but never used.","'Image' is defined but never used.","'Col' is defined but never used.","'gql' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'jwtDecode' is defined but never used.","'Row' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.","ArrayExpression",["122"],"React Hook useEffect has missing dependencies: 'dispatch' and 'selectedUser.username'. Either include them or remove the dependency array.",["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [getMessages, selectedUser]",{"range":"128","text":"129"},"Update the dependencies array to be: [dispatch, messagesData, selectedUser.username]",{"range":"130","text":"131"},[1008,1022],"[getMessages, selectedUser]",[1274,1288],"[dispatch, messagesData, selectedUser.username]"]